local transforms = asset.require("scene/test/fieldline_transform")
local earth_transforms = asset.require("scene/solarsystem/planets/earth/transforms")
local magnetosphere_transforms = asset.require("scene/solarsystem/planets/earth/magnetosphere/transforms_magnetosphere")
local sunTransforms = asset.require("scene/solarsystem/sun/transforms")
local propertyHelper = asset.require("util/property_helper")

local pspTransforms = asset.require("scene/parkersolarprobe/transforms")


local directory = asset.localResource("./testfieldline/")
local PythonPath = "C:\\Python310\\python.exe"
local ScriptPath = "C:\\Users\\eatoc\\OneDrive\\Documents\\My Documents\\NASA\\Flux rope file\\main.py"

local sunRadius = 6.957E8

local au_to_m = 1.496e+11

local keyframes = {

    ['2023-03-30T12:00:00'] = {
        Type = "StaticTranslation",
        Position = {-au_to_m/8,0,0}
    },
    ['2023-03-30T13:00:00'] = {
        Type = "StaticTranslation",
        Position = {au_to_m/8,0,0}
    },

}

local parkerFrame = {
    parent = sunTransforms.SunCenter.Identifier,
    Identifier = "ParkerFrame",
    Transform = {
        Translation = {
            Type = "SpiceTranslation",
            Target = "-96",
            Observer = "SUN",
            FixedDateInfo =  "2023-03-30T00-00-00-000",

        },
         
    }
}

local fieldlines = {
    Identifier = "test",
    Parent =parkerFrame.Identifier,
     Transform = {
     Translation = {
           Type = "TimelineTranslation",
           ShouldInterpolate = true,
           Keyframes = keyframes,   
      },
       Rotation = {
            Type = "SpiceRotation",
            SourceFrame = "HEEQ180",
            DestinationFrame = "-96",
            FixedDateInfo = "2023-03-30T00-00-00-000",
            }
   
  },
    Renderable = {
        Type = "RenderableFluxRope",
        LineWidth = 1.0,
        SourceFolder = directory,
        AlphaBlendlingEnabled = false,
        InputFileType = "Json",
        ScaleToMeters = au_to_m/100,
        ScriptPath =ScriptPath,
        PythonPath = PythonPath,
        PropNames =   {"r",   "delta","y0", "By0", "C10", "tau", "n",  "m",  "h"},
        InitialVals = {0.1,1.0, 0.07 / 2, 10, 1, 1.1, 1, 0, 1}
    },

     GUI = {
        Name = "test",
        Path = "/test",
        Hidden = false
    }
  
}

local toggle_fieldlines = {
  Identifier = "os.events.fieldlines.togglefieldlines",
  Name = "Toggle Fieldlines",
  Command = propertyHelper.invert("Scene.test.Renderable.Enabled"),
  Documentation = "Toggle fieldline rendering of CME",
  GuiPath = "/test",
  IsLocal = false
}


asset.onInitialize(function ()
  openspace.addSceneGraphNode(parkerFrame)
  openspace.action.registerAction(toggle_fieldlines)
  openspace.addSceneGraphNode(fieldlines)

end)


asset.onDeinitialize(function ()
  openspace.removeSceneGraphNode(parkerFrame)
  openspace.removeSceneGraphNode(fieldlines)
  openspace.action.removeAction(toggle_fieldlines)

end)

asset.export(fieldlines)

asset.meta = {
  Name = "Predictive Science Inc. Fieldlines Bastille Day",
  Version = "1.1",
  Description = "Magnetic fieldlines for the bastille day CME event",
  Author = "CCMC, Jonathan Grangien, Matthias Berg",
  URL = "https://dx.doi.org/10.3847/1538-4357/aab36d",
  License = "CC-BY"
}
